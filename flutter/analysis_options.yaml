include: ./analysis_options.autogen.yaml

analyzer:
  errors:
    # 'flutter analyze' exits with 1 even on 'info':
    # https://github.com/flutter/flutter/issues/20855
    todo: ignore
    # Sometimes autogenerated file will have lints that are not yet present in
    # the linter packaged with our Flutter version. Ignore them.
    included_file_warning: ignore
  exclude:
    # These files are autogenerated and do not require analysis. Remember to
    # keep this list in sync with codecov.yml file.
    - "**/messages_*.dart"
    - "**/*.g.dart"
  strong-mode:
    implicit-dynamic: false
    # Disabling implicit casts forces type casting from "dynamic" as it is no
    # longer a bottom type since Dart 2:
    # https://dart.dev/guides/language/sound-problems#the-function-expression-type--isnt-of-type-
    # "dynamic" is typically coming from Firebase, but may also appear in other
    # places. This means one of:
    #
    #   if (variable is Type) {
    #     ...
    #   }
    #
    # or
    #
    #   (variable as Type)
    #
    # constructions. In the first case, it is a cumbersome construction with
    # unclear handlng of the "else" case. In the second case, the avoid_as lint
    # check complains about performance impact. It recommends type assertion,
    # see https://dart-lang.github.io/linter/lints/avoid_as.html, but it's
    # unclear what it is. assert(variable is Type) is not working:
    # https://github.com/dart-lang/sdk/issues/36883. Overall, avoid_as may be
    # changed drastically or even deprecated:
    # https://github.com/dart-lang/linter/issues/1401.
    #
    # TODO(dotdoom): confirm performance impact of "as".
    #
    #implicit-casts: false
  #language:
  # TODO(dotdoom): consider enabling these features.
  #  # https://github.com/dart-lang/language/blob/master/resources/type-system/strict-inference.md
  #  strict-inference: true
  #  # https://github.com/dart-lang/language/blob/master/resources/type-system/strict-raw-types.md
  #  strict-raw-types: true
  #enable-experiment:
  #  # TODO(dotdoom): enable via https://stackoverflow.com/questions/57934341/.
  #  - non-nullable
  # TODO(dotdoom): Enable this option once it becomes mature enough.
  # Right now:
  # - complains about android.hardware.touchscreen even though the default does
  #   not require it:
  #   https://developer.android.com/guide/topics/manifest/uses-feature-element#touchscreen-hw-features
  # - analyses Android manifests in "build" directory even when excluded via
  #   "exclude" option above.
  #optional-checks:
  #chrome-os-manifest-checks

# Rules are disabled by default unless listed explicitly.
linter:
  rules:
    # Disabled documentation linters.
    always_specify_types: false
    annotate_overrides: false
    public_member_api_docs: false
    type_annotate_public_apis: false

    # "Correcting" input parameters is too useful to let go of.
    parameter_assignments: false

    # Final variables are actually quite useful to avoid mistakes.
    unnecessary_final: false

    # Questionable effort-to-gain ratio.
    avoid_catches_without_on_clauses: false
    avoid_function_literals_in_foreach_calls: false
    prefer_double_quotes: false
    sort_constructors_first: false

    # TODO(dotdoom): add messages to asserts.
    prefer_asserts_with_message: false

    # TODO(ksheremet): Decide whether to use relative imports
    prefer_relative_imports: false

    # TODO(dotdoom): add debugFillProperties.
    diagnostic_describe_all_properties: false
