name: flutter

on: [create, push, pull_request]

jobs:
  build:
    # Run only on tags, PRs or pushes to master.
    if: >
      github.base_ref ||
      startsWith(github.ref, 'refs/tags/') ||
      github.ref == 'refs/heads/master'
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-latest, ubuntu-latest, windows-latest]
        include:
          - os: macOS-latest
            platform: ios
            app_artifact_path: "flutter/build/ios/iphoneos/Runner.app"
          - os: windows-latest
            platform: android
            app_artifact_path: "flutter/build/app/outputs/apk/debug/app-debug.apk"
          - os: ubuntu-latest
            platform: android
            app_artifact_path: "flutter/build/app/outputs/apk/debug/app-debug.apk"
            upload_coverage: true
    env:
      GRADLE_OPTS: -Dorg.gradle.daemon=false
      FLUTTER_SDK_ROOT: /tmp/flutter
    runs-on: ${{ matrix.os }}
    steps:
      - name: "Support >260 characters long paths in Git repositories (Windows)"
        run: git config --global core.longpaths true
      - uses: actions/checkout@v1
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.6
      - name: "Install fastlane"
        run: |
          gem install bundler --no-doc
          bundle install --quiet --clean --deployment
      - name: "Install dependencies"
        working-directory: flutter
        run: |
          bundle exec fastlane install_dependencies
          bundle exec fastlane install_debug_keys

      - name: "Generate and lint"
        working-directory: flutter
        run: |
          bundle exec fastlane generate
          bundle exec fastlane lint

      - name: "Run unit tests"
        working-directory: flutter
        run: bundle exec fastlane run flutter args:test,--coverage
      - name: "Upload coverage"
        if: matrix.upload_coverage
        uses: codecov/codecov-action@v1.0.3
        with:
          token: eeabc1cc-89fc-447f-969d-39777e568284
      - name: "Workaround for fastlane & Dart generating files with LF"
        if: startsWith(matrix.os, 'windows')
        run: git add .
      - name: "Check that all files were properly formatted and generated"
        run: bundle exec fastlane ensure_clean_git

      - uses: actions/setup-java@v1
        if: matrix.platform == 'android'
        with:
          java-version: 1.8
      - run: bundle exec fastlane ${{ matrix.platform }} build
        working-directory: flutter
      - name: "Check that no source files were modified during build"
        run: bundle exec fastlane ensure_clean_git

      - name: "Upload application artifacts"
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: "flutter app (${{ matrix.os }})"
          path: ${{ matrix.app_artifact_path }}
      - name: "Upload Pubspec.lock for updating when not having a Mac"
        uses: actions/upload-artifact@v1
        if: always() && matrix.platform == 'ios'
        with:
          name: Podfile.lock
          path: flutter/ios/Podfile.lock
